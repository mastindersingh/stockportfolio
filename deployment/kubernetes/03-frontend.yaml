apiVersion: apps/v1
kind: Deployment
metadata:
  name: stocklive-frontend
  namespace: default
  labels:
    app: stocklive-frontend
    service: stocklive-frontend
    version: v1.0.0
    tags.datadoghq.com/env: dev
    tags.datadoghq.com/service: stocklive-frontend
    tags.datadoghq.com/version: v1.0.0
  annotations:
    admission.datadoghq.com/js-lib.version: "v5.19.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: stocklive-frontend
  template:
    metadata:
      labels:
        app: stocklive-frontend
        service: stocklive-frontend
        version: v1.0.0
        tags.datadoghq.com/env: dev
        tags.datadoghq.com/service: stocklive-frontend
        tags.datadoghq.com/version: v1.0.0
        admission.datadoghq.com/enabled: "true"
      annotations:
        ad.datadoghq.com/frontend.logs: '[{"source":"nginx","service":"stocklive-frontend"}]'
        ad.datadoghq.com/frontend.checks: |
          {
            "http_check": {
              "init_config": {},
              "instances": [
                {
                  "url": "http://%%host%%:80/",
                  "name": "stocklive-frontend-health"
                }
              ]
            }
          }
        admission.datadoghq.com/js-lib.version: "v5.19.0"
    spec:
      containers:
      - name: frontend
        image: stocklive-frontend:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 80
        env:
        - name: DD_ENV
          value: "dev"
        - name: DD_SERVICE
          value: "stocklive-frontend"
        - name: DD_VERSION
          value: "v1.0.0"
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: DD_TRACE_AGENT_URL
          value: "http://$(DD_AGENT_HOST):8126"
        - name: DD_RUM_APPLICATION_ID
          value: "stocklive-frontend-app"
        - name: DD_RUM_CLIENT_TOKEN
          value: "pub8edfbfb9a7e08dd348d035ac32492341"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: stocklive-frontend-service
  namespace: default
spec:
  selector:
    app: stocklive-frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: LoadBalancer